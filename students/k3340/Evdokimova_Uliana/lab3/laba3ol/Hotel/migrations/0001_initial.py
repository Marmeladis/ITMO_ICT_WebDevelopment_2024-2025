# Generated by Django 5.1.4 on 2025-01-10 08:24

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('patronymic', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(null=True)),
                ('working_status', models.CharField(max_length=30)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='Hotel.employee')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='Hotel.position')),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('places', models.IntegerField()),
                ('description', models.TextField()),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('places__lte', 4)), name='places <= 4'), models.CheckConstraint(condition=models.Q(('places__gte', 1)), name='places >= 1')],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=4, unique=True)),
                ('area', models.IntegerField()),
                ('is_occupied', models.BooleanField(default=False)),
                ('is_cleaned', models.BooleanField(default=True)),
                ('floor', models.IntegerField()),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='Hotel.roomtype')),
            ],
        ),
        migrations.CreateModel(
            name='RoomTypePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_price', models.IntegerField()),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField()),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='Hotel.roomtype')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.IntegerField()),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_history', to='Hotel.position')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='email_address')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('patronymic', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=15)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('birth_date', models.DateField(blank=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_account_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_account_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField(default=django.utils.timezone.now)),
                ('from_town', models.CharField(max_length=30)),
                ('check_in_time', models.DateTimeField(null=True)),
                ('departure_time', models.DateTimeField(null=True)),
                ('full_days', models.IntegerField(default=0)),
                ('state', models.CharField(max_length=30)),
                ('payment_status', models.CharField(max_length=30)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='Hotel.room')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='Hotel.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('is_done', models.BooleanField(default=False)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_schedule', to='Hotel.contract')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_schedule', to='Hotel.room')),
            ],
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(condition=models.Q(('number__regex', '\\d{3,4}')), name='number_constraint'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(condition=models.Q(('floor__gte', 0)), name='floor_constraint'),
        ),
        migrations.AddConstraint(
            model_name='roomtypeprice',
            constraint=models.CheckConstraint(condition=models.Q(('day_price__gt', 0)), name='price > 0'),
        ),
        migrations.AddConstraint(
            model_name='salaryhistory',
            constraint=models.CheckConstraint(condition=models.Q(('salary__gt', 0)), name='salary > 0'),
        ),
    ]
